
package view;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;


public class HomeFrm extends javax.swing.JFrame {

    
    public HomeFrm() {
        initComponents();
        setWindowSize();
        
        this.tabla.setModel(model);
        this.model.addColumn("Producto");
        this.model.addColumn("Genero");
        this.model.addColumn("Talla");
        this.model.addColumn("Precio unitario");
        this.model.addColumn("Cantidad");
        this.model.addColumn("Total a pagar");


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tallaHombre = new javax.swing.JLabel();
        tallaMujer = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        boxProducto = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnHombre = new javax.swing.JRadioButton();
        btnMujer = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        boxTalla = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        boxCantidad = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnCompra = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtPrecio = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnLimTabla = new javax.swing.JButton();
        btnQuitarCom = new javax.swing.JButton();
        btnNeto = new javax.swing.JButton();
        txtTotalCompra = new javax.swing.JTextField();
        cerrarSesion = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Tienda de Ropa");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 10, 130, 40));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tallas disponibles", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        jLabel2.setText("Talla caballero:");

        jLabel3.setText("Talla dama:");

        tallaHombre.setText("-");

        tallaMujer.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tallaHombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tallaMujer, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tallaHombre))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tallaMujer))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 420, 170));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Realizar pedido", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        jLabel4.setText("Producto a seleccionar:");

        boxProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una:", "Top", "Pantalon", "Zapatos", "Vestidos" }));

        jLabel5.setText("Genero:");

        buttonGroup1.add(btnHombre);
        btnHombre.setText("Hombre");
        btnHombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHombreActionPerformed(evt);
            }
        });

        buttonGroup1.add(btnMujer);
        btnMujer.setText("Mujer");

        jLabel6.setText("Tallas:");

        boxTalla.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una:", "S", "M", "L", "X", "XL", "XXL", "XXXL" }));

        jLabel7.setText("Cantidad:");

        boxCantidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));

        jLabel8.setText("Precio:");

        jLabel9.setText("Total a pagar:");

        btnCompra.setText("Agregar al carrito");
        btnCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompraActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(boxProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel5))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnMujer)
                                    .addComponent(btnHombre))))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(boxTalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCompra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimpiar)))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(boxCantidad, 0, 1, Short.MAX_VALUE))
                    .addComponent(jLabel9))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHombre)
                    .addComponent(boxTalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecio))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnMujer)
                                .addGap(95, 95, 95))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCompra)
                            .addComponent(btnLimpiar))))
                .addContainerGap(109, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, 700, 320));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalles de la compra", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 1200, 300));

        btnLimTabla.setText("Limpiar tabla");
        btnLimTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimTablaActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 640, -1, -1));

        btnQuitarCom.setText("Quitar compra");
        btnQuitarCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarComActionPerformed(evt);
            }
        });
        getContentPane().add(btnQuitarCom, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 640, -1, -1));

        btnNeto.setText("Generar compra");
        btnNeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNetoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNeto, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 640, -1, -1));
        getContentPane().add(txtTotalCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 660, 150, -1));

        cerrarSesion.setText("Cerrar Sesion");
        cerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionActionPerformed(evt);
            }
        });
        getContentPane().add(cerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 640, -1, -1));

        jLabel10.setText("Neto a pagar:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 640, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
DefaultTableModel model = new DefaultTableModel();
    private void btnHombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHombreActionPerformed

    private void btnLimTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimTablaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        model.setRowCount(0);
        txtTotalCompra.setText("");
    }//GEN-LAST:event_btnLimTablaActionPerformed

    private void realizarCompra() {

        String producto = boxProducto.getSelectedItem().toString();
        String genero = btnHombre.isSelected() ? "Hombre" : "Mujer";
        String talla = boxTalla.getSelectedItem().toString();
        int cantidad = 0;
        double precio = 0;

        switch (producto) {
            case "Top":
                if (genero.equals("Hombre")) {
                    switch (talla) {
                        case "S":
                            precio = 300;
                            tallaHombre.setText("S = 50 cm ancho, 70 cm de largo");
                            break;
                        case "M":
                            precio = 300;
                            tallaHombre.setText("M = 53 cm ancho, 72 cm largo");
                            break;
                        case "L":
                            precio = 300;
                            tallaHombre.setText("L = 56 cm ancho, 74 cm largo");
                            break;
                        case "X":
                            precio = 300;
                            tallaHombre.setText("X = 59 cm ancho, 76 cm largo");
                            break;
                        case "XL":
                            precio = 300;
                            tallaHombre.setText("XL = 62 cm ancho, 78 cm largo");
                            break;
                        case "XXL":
                            precio = 300;
                            tallaHombre.setText("XXL = 65 cm ancho, 80 cm largo");
                            break;
                        case "XXXL":
                            precio = 300;
                            tallaHombre.setText("XXXL = 68 cm ancho, 82 cm largo");
                            break;
                    }
                } else {
                    precio = 300;
                    tallaHombre.setText("");
                }
                break;
            case "Pantalon":
                if (genero.equals("Hombre")) {
                    switch (talla) {
                        case "S":
                            precio = 200;
                            tallaHombre.setText("Talla 46");
                            break;
                        case "M":
                            precio = 200;
                            tallaHombre.setText("Talla 48");
                            break;
                        case "L":
                            precio = 200;
                            tallaHombre.setText("Talla 50");
                            break;
                        case "X":
                            precio = 200;
                            tallaHombre.setText("Talla 52");
                            break;
                        case "XL":
                            precio = 200;
                            tallaHombre.setText("Talla 54");
                            break;
                        case "XXL":
                            precio = 200;
                            tallaHombre.setText("Talla 56");
                            break;
                        case "XXXL":
                            precio = 200;
                            tallaHombre.setText("Talla 58");
                            break;
                    }
                } else {
                    precio = 200;
                    tallaHombre.setText("");
                }
                break;
            case "Zapatos":
                if (genero.equals("Hombre")) {
                    switch (talla) {
                        case "S":
                            precio = 150;
                            tallaHombre.setText("Talla 25");
                            break;
                        case "M":
                            precio = 150;
                            tallaHombre.setText("Talla 26");
                            break;
                        case "L":
                            precio = 150;
                            tallaHombre.setText("Talla 27");
                            break;
                        case "X":
                            precio = 150;
                            tallaHombre.setText("Talla 28");
                            break;
                        case "XL":
                            precio = 150;
                            tallaHombre.setText("Talla 28.5");
                            break;
                        case "XXL":
                            precio = 150;
                            tallaHombre.setText("Talla 29");
                            break;
                        case "XXXL":
                            precio = 150;
                            tallaHombre.setText("Talla 30");
                            break;
                    }
                } else {
                    precio = 150;
                    tallaHombre.setText("");
                }
                break;
            case "Vestidos":
                if (genero.equals("Hombre")) {
                    switch (talla) {
                        case "S":
                            precio = 450;
                            tallaHombre.setText("Talla 5");
                            break;
                        case "M":
                            precio = 450;
                            tallaHombre.setText("Talla 6");
                            break;
                        case "L":
                            precio = 450;
                            tallaHombre.setText("Talla 7");
                            break;
                        case "X":
                            precio = 450;
                            tallaHombre.setText("Talla 8");
                            break;
                        case "XL":
                            precio = 450;
                            tallaHombre.setText("Talla 8.5");
                            break;
                        case "XXL":
                            precio = 450;
                            tallaHombre.setText("Talla 9");
                            break;
                        case "XXXL":
                            precio = 450;
                            tallaHombre.setText("Talla 9.5");
                            break;
                    }
                } else {
                    precio = 450;
                    tallaHombre.setText("");
                }
                break;
        }
        switch (producto) {
            case "Top":
                if (genero.equals("Mujer")) {
                    switch (talla) {
                        case "S":
                            precio = 300;
                            tallaMujer.setText("S = 41 cm ancho, 64 cm de largo");
                            break;
                        case "M":
                            precio = 300;
                            tallaMujer.setText("M = 43 cm ancho, 67 cm largo");
                            break;
                        case "L":
                            precio = 300;
                            tallaMujer.setText("L = 47 cm ancho, 69 cm largo");
                            break;
                        case "X":
                            precio = 300;
                            tallaMujer.setText("X = 50 cm ancho, 71 cm largo");
                            break;
                        case "XL":
                            precio = 300;
                            tallaMujer.setText("XL = 56 cm ancho, 72 cm largo");
                            break;
                        case "XXL":
                            precio = 300;
                            tallaMujer.setText("XXL = 59 cm ancho, 74 cm largo");
                            break;
                        case "XXXL":
                            precio = 300;
                            tallaMujer.setText("XXXL = 63 cm ancho, 77 cm largo");
                            break;
                    }
                } else {
                    precio = 300;
                    tallaMujer.setText("");
                }
                break;
            case "Pantalon":
                if (genero.equals("Mujer")) {
                    switch (talla) {
                        case "S":
                            precio = 200;
                            tallaMujer.setText("Talla 24");
                            break;
                        case "M":
                            precio = 200;
                            tallaMujer.setText("Talla 26");
                            break;
                        case "L":
                            precio = 200;
                            tallaMujer.setText("Talla 28");
                            break;
                        case "X":
                            precio = 200;
                            tallaMujer.setText("Talla 30");
                            break;
                        case "XL":
                            precio = 200;
                            tallaMujer.setText("Talla 32");
                            break;
                        case "XXL":
                            precio = 200;
                            tallaMujer.setText("Talla 34");
                            break;
                        case "XXXL":
                            precio = 200;
                            tallaMujer.setText("Talla 36");
                            break;
                    }
                } else {
                    precio = 200;
                    tallaMujer.setText("");
                }
                break;
            case "Zapatos":
                if (genero.equals("Mujer")) {
                    switch (talla) {
                        case "S":
                            precio = 150;
                            tallaMujer.setText("Talla 22");
                            break;
                        case "M":
                            precio = 150;
                            tallaMujer.setText("Talla 23");
                            break;
                        case "L":
                            precio = 150;
                            tallaMujer.setText("Talla 24");
                            break;
                        case "X":
                            precio = 150;
                            tallaMujer.setText("Talla 25");
                            break;
                        case "XL":
                            precio = 150;
                            tallaMujer.setText("Talla 25.5");
                            break;
                        case "XXL":
                            precio = 150;
                            tallaMujer.setText("Talla 26");
                            break;
                        case "XXXL":
                            precio = 150;
                            tallaMujer.setText("Talla 26.5");
                            break;
                    }
                } else {
                    precio = 150;
                    tallaMujer.setText("");
                }
                break;
            case "Vestidos":
                if (genero.equals("Mujer")) {
                    switch (talla) {
                        case "S":
                            precio = 450;
                            tallaMujer.setText("Talla 1");
                            break;
                        case "M":
                            precio = 450;
                            tallaMujer.setText("Talla 2");
                            break;
                        case "L":
                            precio = 450;
                            tallaMujer.setText("Talla 4");
                            break;
                        case "X":
                            precio = 450;
                            tallaMujer.setText("Talla 6");
                            break;
                        case "XL":
                            precio = 450;
                            tallaMujer.setText("Talla 10");
                            break;
                        case "XXL":
                            precio = 450;
                            tallaMujer.setText("Talla 12");
                            break;
                        case "XXXL":
                            precio = 450;
                            tallaMujer.setText("Talla 14");
                            break;
                    }
                } else {
                    precio = 450;
                    tallaMujer.setText("");
                }
                break;
        }

        if (genero.equals("Hombre")) {
            precio += 100;
        } else if (genero.equals("Mujer")) {
            precio += 70;
        }

        if (talla.equals("S") || talla.equals("M") || talla.equals("L") || talla.equals("X")) {
            precio += 30;
        } else if (talla.equals("XL") || talla.equals("XXL") || talla.equals("XXXL")) {
            precio += 110;
        }

        try {
            cantidad = Integer.parseInt(boxCantidad.getSelectedItem().toString());
        } catch (NumberFormatException e) {

            return; // Detener la ejecución del método
        }

        double total = cantidad * precio;

        // Agregar los datos a la tabla
        Object[] rowData = {producto, genero, talla, precio, cantidad, total};
        model.addRow(rowData);

        // Calcular el total de la compra
        double totalCompra = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            totalCompra += Double.parseDouble(model.getValueAt(i, 5).toString());
        }
        txtTotalCompra.setText(String.valueOf(totalCompra));

        // Actualizar el campo de precio con el precio unitario modificado
        txtPrecio.setText(String.valueOf(precio));

        // Limpiar los campos
        boxProducto.setSelectedIndex(0);
        buttonGroup1.clearSelection();
        boxTalla.setSelectedIndex(0);
        boxCantidad.setSelectedIndex(0);
        txtTotal.setText("");
    }


    private void btnCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompraActionPerformed
        // TODO add your handling code here:
        realizarCompra();
    }//GEN-LAST:event_btnCompraActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        boxProducto.setSelectedIndex(0);
        buttonGroup1.clearSelection();
        boxTalla.setSelectedIndex(0);
        boxCantidad.setSelectedIndex(0);
        txtPrecio.setText("");
        tallaHombre.setText("");
        tallaMujer.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnQuitarComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarComActionPerformed
        // TODO add your handling code here:

        int rowCount = tabla.getRowCount();

        // Verificar si hay al menos una fila en la tabla
        if (rowCount > 0) {

            DefaultTableModel model = (DefaultTableModel) tabla.getModel();
            model.removeRow(rowCount - 1);

            // Calcular el nuevo total de la compra
            double totalCompra = 0;
            for (int i = 0; i < model.getRowCount(); i++) {
                totalCompra += Double.parseDouble(model.getValueAt(i, 5).toString());
            }
            txtTotalCompra.setText(String.valueOf(totalCompra));
        }
    }//GEN-LAST:event_btnQuitarComActionPerformed

    private void cerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesionActionPerformed
        // TODO add your handling code here:
        this.dispose();
        LoginFrm loginFrm = new LoginFrm();
        loginFrm.setVisible(true);
    }//GEN-LAST:event_cerrarSesionActionPerformed

    private void btnNetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNetoActionPerformed

        if (tabla.getRowCount() > 0) {

            String nombre = JOptionPane.showInputDialog(this, "Ingrese su nombre:");
            String apellido = JOptionPane.showInputDialog(this, "Ingrese su apellido:");
            String usuario = JOptionPane.showInputDialog(this, "Ingrese su usuario:");
            String correo = JOptionPane.showInputDialog(this, "Ingrese su correo electrónico:");
            String calle = JOptionPane.showInputDialog(this, "Ingrese la dirección de su calle:");
            String numero = JOptionPane.showInputDialog(this, "Ingrese el número exterior:");
            String numeroIn = JOptionPane.showInputDialog(this, "Ingrese su número interior (solo en caso de tenerlo, de lo contrario, escriba 0):");
            String colonia = JOptionPane.showInputDialog(this, "Ingrese su colonia:");
            String cp = JOptionPane.showInputDialog(this, "Ingrese su código postal:");
            String ciudad = JOptionPane.showInputDialog(this, "Ingrese su ciudad:");
            String estado = JOptionPane.showInputDialog(this, "Ingrese su estado (solo México):");
            JOptionPane.showMessageDialog(this, "Gracias por elegirnos, los detalles de facturacion se guardaran a continuación");

            if (nombre != null && apellido != null && usuario != null && correo != null) {
                try {
                    // Crear el selector de archivo
                    JFileChooser fileChooser = new JFileChooser();
                    fileChooser.setDialogTitle("Guardar Ticket");
                    FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de texto (.txt)", "txt");
                    fileChooser.setFileFilter(filter);

                    int userSelection = fileChooser.showSaveDialog(this);

                    if (userSelection == JFileChooser.APPROVE_OPTION) {
                        // Obtener el archivo seleccionado
                        String pathArchivo = fileChooser.getSelectedFile().getPath();

                        // Crear el FileWriter y PrintWriter
                        FileWriter archivo = new FileWriter(pathArchivo);
                        PrintWriter escritor = new PrintWriter(new BufferedWriter(archivo));

                        // Escribir los detalles del pedido en el archivo
                        escritor.println("DETALLES DEL PEDIDO");
                        escritor.println("-------------------");
                        escritor.println();
                        escritor.println("Nombre: " + nombre);
                        escritor.println("Apellido: " + apellido);
                        escritor.println("Usuario: " + usuario);
                        escritor.println("Correo electrónico: " + correo);
                        escritor.println("Calle: " + calle);
                        escritor.println("Número exterior: " + numero);
                        escritor.println("Número interior: " + numeroIn);
                        escritor.println("Colonia: " + colonia);
                        escritor.println("Código postal: " + cp);
                        escritor.println("Ciudad: " + ciudad);
                        escritor.println("Estado: " + estado);
                        escritor.println();

                        for (int i = 0; i < tabla.getRowCount(); i++) {
                            String producto = tabla.getValueAt(i, 0).toString();
                            String genero = tabla.getValueAt(i, 1).toString();
                            String talla = tabla.getValueAt(i, 2).toString();
                            double precio = Double.parseDouble(tabla.getValueAt(i, 3).toString());
                            int cantidad = Integer.parseInt(tabla.getValueAt(i, 4).toString());
                            double total = Double.parseDouble(tabla.getValueAt(i, 5).toString());

                            escritor.println("Producto: " + producto);
                            escritor.println("Género: " + genero);
                            escritor.println("Talla: " + talla);
                            escritor.println("Precio: $" + precio);
                            escritor.println("Cantidad: " + cantidad);
                            escritor.println("Total: $" + total);
                            escritor.println();
                        }

                        // Cerrar el FileWriter y PrintWriter
                        escritor.close();
                        archivo.close();

                        JOptionPane.showMessageDialog(this, "Ticket generado correctamente. Guardado en: " + pathArchivo);
                    }
                } catch (IOException e) {
                    System.out.println("Error al generar el ticket: " + e.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Debe ingresar todos los datos del usuario.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay compras realizadas para generar el ticket.");
        }
    }//GEN-LAST:event_btnNetoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxCantidad;
    private javax.swing.JComboBox<String> boxProducto;
    private javax.swing.JComboBox<String> boxTalla;
    private javax.swing.JButton btnCompra;
    private javax.swing.JRadioButton btnHombre;
    private javax.swing.JButton btnLimTabla;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JRadioButton btnMujer;
    private javax.swing.JButton btnNeto;
    private javax.swing.JButton btnQuitarCom;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cerrarSesion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JLabel tallaHombre;
    private javax.swing.JLabel tallaMujer;
    private javax.swing.JLabel txtPrecio;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTotalCompra;
    // End of variables declaration//GEN-END:variables

    private void setWindowSize() {
        
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Dimension screenSize = toolkit.getScreenSize();
        int screenWidth = screenSize.width;
        int screenHeight = screenSize.height;
        
        int targetWidth = 1244; // Tamaño deseado del ancho del JFrame
        int targetHeight = 886; // Tamaño deseado del alto del JFrame
        
        // Verificar si la pantalla es más pequeña que el tamaño deseado
        if (screenWidth < targetWidth || screenHeight < targetHeight) {
            // Ajustar el tamaño del JFrame para que se ajuste a la pantalla
            int width = Math.min(screenWidth, targetWidth);
            int height = Math.min(screenHeight, targetHeight);
            this.setSize(width, height);
        } else {
            this.setSize(targetWidth, targetHeight); // Mantener el tamaño deseado
        }
        
        this.setLocationRelativeTo(null); // Centrar el JFrame en la pantalla
    }
    
    }

